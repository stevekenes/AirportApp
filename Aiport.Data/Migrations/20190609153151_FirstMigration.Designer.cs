// <auto-generated />
using System;
using Aiport.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aiport.Data.Migrations
{
    [DbContext(typeof(AirportDbContext))]
    [Migration("20190609153151_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aiport.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 168, DateTimeKind.Local).AddTicks(7605),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 168, DateTimeKind.Local).AddTicks(7624),
                            Name = "Local"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 168, DateTimeKind.Local).AddTicks(7664),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 168, DateTimeKind.Local).AddTicks(7669),
                            Name = "International"
                        });
                });

            modelBuilder.Entity("Aiport.Data.Entities.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 161, DateTimeKind.Local).AddTicks(8052),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 163, DateTimeKind.Local).AddTicks(1049),
                            Name = "British Airways"
                        },
                        new
                        {
                            Id = 201,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 163, DateTimeKind.Local).AddTicks(2507),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 163, DateTimeKind.Local).AddTicks(2526),
                            Name = "Lofthanza"
                        },
                        new
                        {
                            Id = 301,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 163, DateTimeKind.Local).AddTicks(2544),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 163, DateTimeKind.Local).AddTicks(2548),
                            Name = "Sosoliso"
                        },
                        new
                        {
                            Id = 401,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 163, DateTimeKind.Local).AddTicks(2553),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 163, DateTimeKind.Local).AddTicks(2553),
                            Name = "Ethiopian Air"
                        },
                        new
                        {
                            Id = 501,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 163, DateTimeKind.Local).AddTicks(2557),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 163, DateTimeKind.Local).AddTicks(2557),
                            Name = "Air France"
                        },
                        new
                        {
                            Id = 601,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 163, DateTimeKind.Local).AddTicks(2562),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 163, DateTimeKind.Local).AddTicks(2562),
                            Name = "Emirates"
                        },
                        new
                        {
                            Id = 701,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 163, DateTimeKind.Local).AddTicks(2566),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 163, DateTimeKind.Local).AddTicks(2566),
                            Name = "Nigerian Airways"
                        });
                });

            modelBuilder.Entity("Aiport.Data.Entities.FlightCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<int>("FlightId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FlightId");

                    b.ToTable("FlightCategories");

                    b.HasData(
                        new
                        {
                            Id = 20,
                            CategoryId = 2,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5609),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5631),
                            FlightId = 101
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 2,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5690),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5690),
                            FlightId = 201
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 1,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5695),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5695),
                            FlightId = 301
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 2,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5699),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5699),
                            FlightId = 301
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 1,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5704),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5704),
                            FlightId = 401
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 2,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5708),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5708),
                            FlightId = 401
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 2,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5713),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5713),
                            FlightId = 501
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 2,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5717),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5717),
                            FlightId = 601
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 1,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5717),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5722),
                            FlightId = 701
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 2,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5722),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 171, DateTimeKind.Local).AddTicks(5726),
                            FlightId = 701
                        });
                });

            modelBuilder.Entity("Aiport.Data.Entities.FlightRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<int>("FlightId");

                    b.Property<int>("RouteId");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("RouteId");

                    b.ToTable("FlightRoutes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3494),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3526),
                            FlightId = 101,
                            RouteId = 555
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3585),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3585),
                            FlightId = 201,
                            RouteId = 444
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3589),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3589),
                            FlightId = 301,
                            RouteId = 111
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3594),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3594),
                            FlightId = 301,
                            RouteId = 222
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3598),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3598),
                            FlightId = 301,
                            RouteId = 333
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3603),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3603),
                            FlightId = 401,
                            RouteId = 111
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3607),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3607),
                            FlightId = 401,
                            RouteId = 222
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3612),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3612),
                            FlightId = 401,
                            RouteId = 777
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3612),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3616),
                            FlightId = 501,
                            RouteId = 666
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3616),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3621),
                            FlightId = 601,
                            RouteId = 888
                        },
                        new
                        {
                            Id = 11,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3621),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3621),
                            FlightId = 701,
                            RouteId = 111
                        },
                        new
                        {
                            Id = 12,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3626),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3626),
                            FlightId = 701,
                            RouteId = 111
                        },
                        new
                        {
                            Id = 13,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3630),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3630),
                            FlightId = 701,
                            RouteId = 333
                        },
                        new
                        {
                            Id = 14,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3635),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 175, DateTimeKind.Local).AddTicks(3635),
                            FlightId = 701,
                            RouteId = 555
                        });
                });

            modelBuilder.Entity("Aiport.Data.Entities.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            Id = 111,
                            CategoryId = 1,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 167, DateTimeKind.Local).AddTicks(3317),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 167, DateTimeKind.Local).AddTicks(3345),
                            Name = "Lagos Abuja"
                        },
                        new
                        {
                            Id = 222,
                            CategoryId = 1,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 167, DateTimeKind.Local).AddTicks(3431),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 167, DateTimeKind.Local).AddTicks(3431),
                            Name = "Lagos Enugu"
                        },
                        new
                        {
                            Id = 333,
                            CategoryId = 2,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 167, DateTimeKind.Local).AddTicks(3435),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 167, DateTimeKind.Local).AddTicks(3440),
                            Name = "Lagos Acra"
                        },
                        new
                        {
                            Id = 444,
                            CategoryId = 2,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 167, DateTimeKind.Local).AddTicks(3444),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 167, DateTimeKind.Local).AddTicks(3444),
                            Name = "Lagos Johanesburg"
                        },
                        new
                        {
                            Id = 555,
                            CategoryId = 2,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 167, DateTimeKind.Local).AddTicks(3449),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 167, DateTimeKind.Local).AddTicks(3449),
                            Name = "Lagos London"
                        },
                        new
                        {
                            Id = 666,
                            CategoryId = 2,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 167, DateTimeKind.Local).AddTicks(3453),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 167, DateTimeKind.Local).AddTicks(3453),
                            Name = "Lagos Paris"
                        },
                        new
                        {
                            Id = 777,
                            CategoryId = 2,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 167, DateTimeKind.Local).AddTicks(3458),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 167, DateTimeKind.Local).AddTicks(3462),
                            Name = "Lagos Adis Ababa"
                        },
                        new
                        {
                            Id = 888,
                            CategoryId = 2,
                            DateCreated = new DateTime(2019, 6, 9, 16, 31, 47, 167, DateTimeKind.Local).AddTicks(3462),
                            DateUpdated = new DateTime(2019, 6, 9, 16, 31, 47, 167, DateTimeKind.Local).AddTicks(3467),
                            Name = "Lagos Dubai"
                        });
                });

            modelBuilder.Entity("Aiport.Data.Entities.FlightCategory", b =>
                {
                    b.HasOne("Aiport.Data.Entities.Category", "Category")
                        .WithMany("FlightCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Aiport.Data.Entities.Flight", "Flight")
                        .WithMany("FlightCategories")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Aiport.Data.Entities.FlightRoute", b =>
                {
                    b.HasOne("Aiport.Data.Entities.Flight", "Flight")
                        .WithMany("FlightRoutes")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Aiport.Data.Entities.Route", "Route")
                        .WithMany("FlightRoutes")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Aiport.Data.Entities.Route", b =>
                {
                    b.HasOne("Aiport.Data.Entities.Category", "Category")
                        .WithMany("Routes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
